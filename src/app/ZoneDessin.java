/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import java.awt.Color;
import java.awt.Graphics;
import java.sql.SQLException;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JOptionPane;
import metier.EnumAlgo;
import metier.RequeteDeliver2i;
import modele.Graphe;
import modele.Instance;
import modele.Point;
import modele.Rectangle;
import modele.Tournee;
import modele.Solution;

/**
 *
 * @author cyril
 */
public class ZoneDessin extends javax.swing.JPanel {
    private Instance instance;
    private Graphe graphe;
    private List<Rectangle> lRectangle;
    private RequeteDeliver2i requeteDeliver2i;
    
    /**
     * Creates new form ZoneDessin
     */
    public ZoneDessin(Instance instance){
        initComponents();
        initConnexion();
        System.out.println("Test");
        System.out.println(instance);
        this.instance = instance;
        this.setBackground(Color.white);
        this.setBounds(25, 100, 1300, 600);
        afficherDefault();
    }
    
    private void afficherDefault(){
        Point haut_gauche = new Point(30,100);
        Point bas_droite = new Point(1000,550);
        try{
            int date_max;
            int date_min;
            int nb;
            List<Tournee> lTournee = requeteDeliver2i.getTourneebyInstance(instance.getId());
            date_min = Math.toIntExact(lTournee.get(0).getDebut().getTime()/60000);
            date_max = Math.toIntExact(lTournee.get(0).getFin().getTime()/60000);
            for (int i = 0; i < lTournee.size(); i++) {
                if(date_min > Math.toIntExact(lTournee.get(i).getDebut().getTime()/60000)){
                    date_min = Math.toIntExact(lTournee.get(i).getDebut().getTime()/60000);
                }
                if(date_max < Math.toIntExact(lTournee.get(i).getFin().getTime()/60000)){
                    date_max = Math.toIntExact(lTournee.get(i).getFin().getTime()/60000);
                }
            }
            nb=lTournee.size();
            System.out.println(date_max-date_min);
            this.graphe = new Graphe(haut_gauche, bas_droite, date_min, date_max, nb);
            this.lRectangle = new LinkedList<>();
            for (int i = 0; i < lTournee.size(); i++) {
                long diff_milli = (lTournee.get(i).getFin().getTime()-lTournee.get(i).getDebut().getTime());
                int diff_min = Math.toIntExact(diff_milli/60000);
                long deb = (Math.toIntExact(lTournee.get(i).getDebut().getTime()/60000)-graphe.getDebut());
                int deb_min = Math.toIntExact(deb);
                Point origine = new Point(graphe.getOrigine().getX()+deb_min*graphe.getWidth(),
                        graphe.getOrigine().getY()-(i+1)*graphe.getHeight());
                Rectangle rect = new Rectangle(Color.blue,origine,diff_min*graphe.getWidth(),graphe.getHeight());
                this.lRectangle.add(rect);
            }
        }catch (SQLException ex) {
            
        }
    }
    
    @Override
    protected void paintComponent(Graphics g) {
        // TODO Auto-generated method stub
        super.paintComponent(g);
        graphe.seDessiner(g);
        for(Rectangle rectangle : lRectangle){
            //System.out.println(rectangle.getpHautGauche().getX()+" "+rectangle.getpHautGauche().getY()+" "+rectangle.getWidth()+" "+rectangle.getHeight());
            rectangle.seDessiner(g);
        }
    }
    
    public void afficherAlgo(EnumAlgo algo){
        switch(algo){
            case AlgoOrdonnancement:
                try{
                    Solution solution = requeteDeliver2i.getSolution(instance.getId(),"Algo1");
                }catch(SQLException){
                    
                }
            break;
            case Default:
                afficherDefault();
            break;
        }
    }
    

    private void initConnexion(){
        try {
            this.requeteDeliver2i = RequeteDeliver2i.getInstance();
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, ex,"ClassNotFoundException",JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex,"SQLException",JOptionPane.ERROR_MESSAGE);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
